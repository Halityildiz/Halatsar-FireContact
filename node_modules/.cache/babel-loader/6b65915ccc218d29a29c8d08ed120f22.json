{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport firebase from \"./firebase\";\nimport { useState, useEffect } from \"react\";\nimport { getDatabase, ref, push, set, onValue, query, // remove,\nchild, update } from \"firebase/database\";\nimport { successNote } from \"./customToastify\";\nexport const addInfo = info => {\n  const db = getDatabase();\n  const userRef = ref(db, \"contact\");\n  const newUserRef = push(userRef);\n  set(newUserRef, {\n    username: info.username,\n    phoneNumber: info.phoneNumber,\n    gender: info.gender\n  });\n  successNote(\"Added successfully\");\n};\nexport const useFetch = () => {\n  _s();\n\n  const [contactList, setContactList] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    setIsLoading(true);\n    const db = getDatabase();\n    const userRef = ref(db, \"contact\");\n    onValue(query(userRef), snapshot => {\n      const contacts = snapshot.val(); // send an array of the values in database\n\n      const contactArray = [];\n\n      for (let id in contacts) {\n        contactArray.push({\n          id,\n          ...contacts[id]\n        });\n      }\n\n      setContactList(contactArray);\n      setIsLoading(false);\n    });\n  }, []);\n  return {\n    isLoading,\n    contactList\n  };\n};\n\n_s(useFetch, \"UE3s3vKVcOyMwnX2F6ZDgKwrmoA=\");\n\nexport const deleteInfo = id => {\n  const db = getDatabase();\n  successNote(\"Deleted\");\n  const deleteUserKey = push(child(ref(db), \"contact\")).id; // const userRef = ref(db, 'contact');\n  // remove(ref(db, \"/contact/\" + id));\n\n  const updates = {};\n  updates[\"/contact/\" + deleteUserKey] = null;\n  return update(ref(db), updates);\n};\nexport const updateInfo = info => {\n  const db = getDatabase();\n  const newUserKey = push(child(ref(db), \"contact\")).id;\n  const updates = {};\n  updates[\"/contact/\" + newUserKey] = info;\n  return update(ref(db), updates);\n};","map":{"version":3,"sources":["/Users/halityildiz/Documents/Github/Clarusway-Fullstack/Clarusway-Frontend/React/Projects/fire-contact/src/utils/functions.js"],"names":["firebase","useState","useEffect","getDatabase","ref","push","set","onValue","query","child","update","successNote","addInfo","info","db","userRef","newUserRef","username","phoneNumber","gender","useFetch","contactList","setContactList","isLoading","setIsLoading","snapshot","contacts","val","contactArray","id","deleteInfo","deleteUserKey","updates","updateInfo","newUserKey"],"mappings":"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","sourcesContent":["import firebase from \"./firebase\";\nimport { useState, useEffect } from \"react\";\nimport {\n  getDatabase,\n  ref,\n  push,\n  set,\n  onValue,\n  query,\n  // remove,\n  child,\n  update,\n} from \"firebase/database\";\nimport { successNote } from \"./customToastify\";\n\nexport const addInfo = (info) => {\n  const db = getDatabase();\n  const userRef = ref(db, \"contact\");\n  const newUserRef = push(userRef);\n  set(newUserRef, {\n    username: info.username,\n    phoneNumber: info.phoneNumber,\n    gender: info.gender,\n  });\n  successNote(\"Added successfully\");\n};\n\nexport const useFetch = () => {\n  const [contactList, setContactList] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    setIsLoading(true);\n\n    const db = getDatabase();\n    const userRef = ref(db, \"contact\");\n\n    onValue(query(userRef), (snapshot) => {\n      const contacts = snapshot.val();\n      // send an array of the values in database\n      const contactArray = [];\n      for (let id in contacts) {\n        contactArray.push({ id, ...contacts[id] });\n      }\n      setContactList(contactArray);\n      setIsLoading(false);\n    });\n  }, []);\n  return { isLoading, contactList };\n};\n\nexport const deleteInfo = (id) => {\n  const db = getDatabase();\n  successNote(\"Deleted\");\n  const deleteUserKey = push(child(ref(db), \"contact\")).id;\n  // const userRef = ref(db, 'contact');\n  // remove(ref(db, \"/contact/\" + id));\n  const updates = {};\n  updates[\"/contact/\" + deleteUserKey] = null;\n  return update(ref(db), updates);\n};\n\nexport const updateInfo = (info) => {\n  const db = getDatabase();\n  const newUserKey = push(child(ref(db), \"contact\")).id;\n  const updates = {};\n  updates[\"/contact/\" + newUserKey] = info;\n  return update(ref(db), updates);\n};\n"]},"metadata":{},"sourceType":"module"}